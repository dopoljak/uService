<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
	
    <parent>
        <artifactId>HeavyExample</artifactId>
        <groupId>com.iLirium.uService</groupId>
        <version>1.00-SNAPSHOT</version>
    </parent>
	
    <artifactId>ExampleService</artifactId>
    <packaging>jar</packaging>
	
	
	


    <dependencies>

        <dependency>
            <groupId>com.iLirium.uService</groupId>
            <artifactId>ExampleClient</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.iLirium.uService</groupId>
            <artifactId>ExampleDatabase</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.iLirium.uService</groupId>
            <artifactId>CoreService</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.iLirium.uService</groupId>
            <artifactId>UndertowFull</artifactId>
            <version>${project.version}</version>
        </dependency>



    </dependencies>




    <build>

        <plugins>



            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>current.time</name>
                            <pattern>yyyy-MM-dd-HH:mm:ss</pattern>
                            <timeZone>GMT+2</timeZone>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                            <Built-By>${user.name}</Built-By>
                            <Build-Jdk>${java.version}</Build-Jdk>
                            <Build-Date>${current.time}</Build-Date>
                        </manifestEntries>
                    </archive>

                </configuration>
            </plugin>


            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/config</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>




            <!-- TODO: mislim da je problem bio sa ovim što je ovo multimodule projekt a jandex ne zna raditi sa time pa je tu bilo sranja! s time da mislim da sam ja taj index file bio rucno spajao (output od više modula) i da je cak delalo ali da je zajeb jer treba to nekako u bild time spojiti! -->
            <!-- speed up boot time by indexing all classes used by WELD CDI -->
            <!--plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <version>1.0.5</version>
                <executions>
                    <execution>
                        <id>make-index</id>
                        <goals>
                            <goal>jandex</goal>
                        </goals>
                        <configuration>
                        </configuration>
                    </execution>
                </executions>
            </plugin-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.ilirium.uService.exampleservicejar.MainServer</mainClass>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                            <outputFile>${project.build.directory}/release/${project.artifactId}-${project.version}-shaded.jar</outputFile>
                            <!--outputDirectory>${project.build.directory}/release/</outputDirectory>
                            <finalName>${project.artifactId}-${project.version}-shaded</finalName -->
                            <filters>
                                <filter>
                                    <!-- Exclude files that sign a jar (one or multiple of the dependencies).
                                    One may not repack a signed jar without this, or you will get a SecurityException
                                    at program start. -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



        </plugins>
    </build>



</project>